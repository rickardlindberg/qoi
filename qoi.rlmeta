QOI {
    decode = start
             int:width
             int:height
             channels:channels
             colorspace:colorspace
             chunk*:chunks
             end
             !.
        -> (* [[0 0 0 255]] 65):running
        -> [width height channels colorspace [~~chunks]]
    start = 0x71 0x6F 0x69 0x66
    end = 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x01
    channels = 0x03 | 0x04
    colorspace = 0x00 | 0x01
    chunk =
        | 0b11111111 .:r .:g .:b .:a
            -> [(run "ProcessPixel" [r g b a])]
        | 0b11111110 .:r .:g .:b
            -> [(run "ProcessPixel" [r g b 255])]
        | !end 0b00xxxxxx
            -> [(run "ProcessPixel" (get running x))]
        | 0b01rrggbb
            -> [(run "ProcessPixelDiff" [r g b ~(get running 64)])]
        | 0b10xxxxxx 0byyyyzzzz
            -> [(run "ProcessLumaDiff" [x y z ~(get running 64)])]
        | 0b11xxxxxx
            -> (* [(get running 64)] (+ x 1))
    ProcessPixelDiff = .:rd .:gd .:bd .:r .:g .:b .:a
        -> (run "ProcessPixel" [(% (+ r (- rd 2)) 256)
                                (% (+ g (- gd 2)) 256)
                                (% (+ b (- bd 2)) 256)
                                a])
    ProcessLumaDiff = .:dg .:drdg .:dbdg .:r .:g .:b .:a
        -> (run "ProcessPixel" [(% (+ r (- dg 40) drdg) 256)
                                (% (+ g (- dg 32))      256)
                                (% (+ b (- dg 40) dbdg) 256)
                                a])
    ProcessPixel = .:r .:g .:b .:a
        -> (set running 64 [r g b a])
        -> (set running (% (+ (* r 3)
                              (* g 5)
                              (* b 7)
                              (* a 11))
                           64)
                        [r g b a])
        -> [r g b a]
    int = .:b1 .:b2 .:b3 .:b4
        -> (+ (<< b1 24)
              (<< b2 16)
              (<< b3 8)
              b4)
}
